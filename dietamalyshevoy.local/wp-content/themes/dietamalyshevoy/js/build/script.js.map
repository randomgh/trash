{"version":3,"sources":["script.js"],"names":["document","window","location","$","jQuery","WP","aboutVideo","onYouTubePlayerAPIReady"],"mappings":"cAAA,SAAEA,EAAUC,EAAQC,EAAUC,GAAeA,EAAAH,GACtBG,EAAGF,GAD1B,CAybGD,SAAUC,OAAQC,SAAUE,OAAQC,IAEvC,IAAIC,YAAa,EAEjB,SAASC,0BACLD,YAAa","file":"script.js","sourcesContent":["((document, window, location, $, WP = {}) => {\r\n    const READY_TIMEOUT = 500;\r\n\r\n    const $document = $(document),\r\n          $window = $(window);\r\n\r\n    let $body,\r\n        $app,\r\n        $header,\r\n        $footer,\r\n        $main,\r\n        $sections;\r\n\r\n    const init = () => {\r\n        $body = $document.find('body');\r\n        $app = $body.find('.app');\r\n        $header = $app.find('.header');\r\n        $footer = $app.find('.footer');\r\n        $main = $app.find('.main');\r\n        $sections = $main.find('.section');\r\n\r\n        $window.on('scroll', onWindowScroll);\r\n        $window.on('resize', onWindowResize);\r\n\r\n        onWindowResize();\r\n\r\n        setTimeout(() => $body.addClass('ready'), READY_TIMEOUT);\r\n    };\r\n\r\n    const onWindowScroll = event => {\r\n        let $current = $sections.first(),\r\n            $this;\r\n\r\n        $sections.each(function(index) {\r\n            $this = $(this);\r\n\r\n            if (Math.ceil($this.offset().top - $window.scrollTop()) > $window.height() / 2) {\r\n                return false;\r\n            } else {\r\n                $current = $this;\r\n            }\r\n        });\r\n    };\r\n\r\n    const onWindowResize = event => {\r\n        onWindowScroll();\r\n    };\r\n\r\n    let $cardsSection,\r\n        $cardsCards;\r\n\r\n    const initCards = () => {\r\n        $cardsSection = $body.find('.section_home-cards');\r\n        $cardsCards = $cardsSection.find('.home-cards__card');\r\n\r\n        $cardsCards.on('mouseenter mouseover mousemove mouseout mouseleave', onCardMouseMove);\r\n    };\r\n\r\n    const onCardMouseMove = event => {\r\n        const $target = $(event.currentTarget),\r\n              circle = $target.find('.home-cards__card__circle');\r\n\r\n        const offset = $target.offset(),\r\n              top = event.pageY - offset.top - circle.outerWidth() * .75,\r\n              left = event.pageX - offset.left - circle.outerHeight() * .75;\r\n\r\n        circle.css({\r\n            top: Math.max(0, Math.min(top, $target.outerHeight() - circle.outerHeight())),\r\n            left: Math.max(0, Math.min(left, $target.outerWidth() - circle.outerWidth()))\r\n        });\r\n    };\r\n/*\r\n    let $calcForm,\r\n        $calcFormFields,\r\n        $calcValidation,\r\n        $calcModal;\r\n\r\n    const initCalcForm = () => {\r\n      $calcForm = $('.home-form form.content');\r\n      $calcFormFields = $('.home-form__field');\r\n      $calcModal = $('.modal-calc');\r\n\r\n      if($calcForm.length){\r\n        $calcForm.on('submit', onCalcFormSubmit);\r\n      }\r\n\r\n      if($calcModal.length){\r\n        $calcModal.on('click','.modal-calc__close', onCalcFormClose);\r\n        $calcModal[0].addEventListener('click', e => {\r\n            if (e.target == e.currentTarget) { onCalcFormClose(); }\r\n        });\r\n      }\r\n    };\r\n\r\n    const onCalcFormClose = () => {\r\n        $calcModal.removeClass('modal-calc_display');\r\n    };\r\n\r\n    const onCalcFormSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        $calcValidation = true;\r\n\r\n        $calcFormFields.each((i, e) => {\r\n            const $this = $(e);\r\n            \r\n            if (!$this.find('.home-form__field__input').val()) {\r\n                if (!$this.hasClass('home-form__field_error')) $this.addClass('home-form__field_error');\r\n\r\n                $calcValidation = false;\r\n\r\n            } else if($this.hasClass('home-form__field_error')) {\r\n                $this.removeClass('home-form__field_error');\r\n            }\r\n        });\r\n\r\n        if ($calcValidation) calcFormSend();\r\n    };\r\n    \r\n    const calcFormSend = () => {\r\n        //TODO: Make request for Mass Index From \r\n\r\n        $calcModal.addClass('modal-calc_display');\r\n    };\r\n\r\n    let player,\r\n        $aboutVideo,\r\n        $aboutVideoPlay;\r\n\r\n    const initAboutVideo = () => {\r\n        $aboutVideo = $('.about-main__video');\r\n        $aboutVideoPlay = $('.about-main__img__btn');\r\n\r\n        if ($aboutVideo.length && $aboutVideoPlay.length) {\r\n            player = new YT.Player($aboutVideo[0], {\r\n                videoId: 'Mv39yQbsezQ',\r\n                host: 'https://www.youtube.com',\r\n                playerVars: {\r\n                    showinfo: 0,\r\n                    enablejsapi: 1,\r\n                    fs: 1,\r\n                    origin: location.origin\r\n                },\r\n                events: {\r\n                    'onReady': onPlayerReady,\r\n                    'onStateChange': onPlayerState\r\n                }\r\n            });\r\n\r\n            if ($aboutVideoPlay.length) {\r\n                $aboutVideoPlay.on('click', onAboutVideoPlay);\r\n            }\r\n\r\n            $document.bind('fscreenchange', onAboutVideoFullscreen);\r\n        }\r\n    };\r\n\r\n    const onPlayerReady = event => {\r\n        $aboutVideo = $('.about-main__video');\r\n        $aboutVideo.addClass('about-main__video_ready');\r\n    };\r\n\r\n    const onPlayerState = event => {\r\n        if (event.data === YT.PlayerState.ENDED) $.fullscreen.exit();\r\n    };\r\n\r\n    const onAboutVideoPlay = event => {\r\n        event.preventDefault();\r\n\r\n        $aboutVideo.fullscreen();\r\n    };\r\n\r\n    const onAboutVideoFullscreen = event => {\r\n        if ($.fullscreen.isFullScreen()) {\r\n            $aboutVideo.addClass('about-main__video_playing');\r\n\r\n            player.playVideo();\r\n        } else {\r\n            $aboutVideo.removeClass('about-main__video_playing');\r\n\r\n            player.stopVideo();\r\n        }\r\n    };\r\n\r\n    let $formRegistration,\r\n        $formRegistrationPhone,\r\n        $formLogin,\r\n        $formRestorePassword,\r\n        $formNewPassword,\r\n        $inputPassword,\r\n        $inputEmail,\r\n        $inputPhone,\r\n        $inputCode,\r\n        $inputName,\r\n        $inputBirthday,\r\n        $inputGender,\r\n        $inputPasswordHint,\r\n        $inputPasswordHintCapital,\r\n        $inputPasswordHintNumber,\r\n        $inputPasswordHintMin,\r\n        $inputPasswordHintBlock,\r\n        $inputPasswordChangeType,\r\n        $inputSubmit,\r\n        $ajaxSent,\r\n        $ajaxArgs;\r\n\r\n    const initFormValidation = () => {\r\n        $formRegistration = $app.find('#registration');\r\n        $formRegistrationPhone = $app.find('#authorization-phone');\r\n        $formLogin = $app.find('#login');\r\n        $formRestorePassword = $app.find('#restore-password');\r\n        $formNewPassword = $app.find('#new-password');\r\n\r\n        $inputPhone = $app.find('#authorization__phone');\r\n        $inputEmail = $app.find('#authorization__email');\r\n        $inputPassword = $app.find('#authorization__password');\r\n        $inputCode = $app.find('#authorization__code');\r\n        $inputName = $app.find('#authorization__name');\r\n        $inputBirthday = $app.find('#authorization__birthday');\r\n        $inputGender = $app.find('#authorization__gender');\r\n\r\n        $inputPasswordHint = $app.find('.authorization__password-hint');\r\n        $inputPasswordHintCapital = $app.find('.authorization__password-hint_capital');\r\n        $inputPasswordHintNumber = $app.find('.authorization__password-hint_number');\r\n        $inputPasswordHintMin = $app.find('.authorization__password-hint_min');\r\n        $inputPasswordHintBlock = 'authorization__password-hint__block_active';\r\n\r\n        $inputSubmit = $app.find('.authorization__submit');\r\n        $inputPasswordChangeType = $app.find('.authorization__field__change-type');\r\n\r\n        $ajaxSent = false;\r\n        $ajaxArgs = {\r\n            dataType:  'json',\r\n            beforeSubmit: ajaxReqGo,\r\n            success: ajaxReqCome,\r\n            error: function(data) {\r\n                console.log(arguments);\r\n            },\r\n            url: ajax_var.url\r\n        };\r\n\r\n        if ($formRegistration.length){\r\n            $inputEmail.on('keyup', onFormRegistrationCheck);\r\n            $inputPassword.on('keyup', onFormRegistrationCheck);\r\n            $inputPassword.on('focus', onPasswordFocus);\r\n            $inputPasswordChangeType.on('click', onPasswordChangeType);\r\n            $formRegistration.on('submit', onFormRegistrationSubmit);\r\n        }\r\n\r\n        if ($formRegistrationPhone.length){\r\n            $inputPhone.on('keyup', onFormRegistrationPhoneCheck);\r\n            $formRegistrationPhone.on('submit', onFormRegistrationPhoneSubmit);\r\n        }\r\n\r\n        if ($formLogin.length){\r\n            $inputEmail.on('keyup', onFormLoginCheck);\r\n            $inputPassword.on('keyup', onFormLoginCheck);\r\n            $inputPasswordChangeType.on('click', onPasswordChangeType);\r\n            $formLogin.on('submit', onFormLoginSubmit);\r\n        }\r\n\r\n        if ($formRestorePassword.length){\r\n            $inputEmail.on('keyup', onFormRestorePasswordCheck);\r\n            $formRestorePassword.on('submit', onFormRestorePasswordSubmit);\r\n        }\r\n\r\n        if ($formNewPassword.length){\r\n            $inputPassword.on('focus', onPasswordFocus);\r\n            $inputPassword.on('keyup', onFormNewPasswordCheck);\r\n            $formNewPassword.on('submit', onFormNewPasswordSubmit);\r\n        }\r\n\r\n    };\r\n\r\n    const ajaxReqGo = data => {\r\n        if ($ajaxSent){\r\n            return false\r\n        }\r\n\r\n        $inputSubmit.attr('disabled', 'disabled');\r\n        $ajaxSent = true;\r\n    };\r\n\r\n    const ajaxReqCome = data => {\r\n        $inputSubmit.removeAttr('disabled');\r\n        if (data.data.redirect) window.location.href = data.data.redirect;\r\n        $ajaxSent = false;\r\n    };\r\n\r\n    const onFormNewPasswordSubmit = event => {\r\n        event.preventDefault();\r\n        if (onFormNewPasswordCheck()){\r\n            $formNewPassword.ajaxSubmit($ajaxArgs);\r\n        }\r\n    };\r\n\r\n    const onFormNewPasswordCheck = () => {\r\n        if (onPasswordCheckHint()) {\r\n            $inputSubmit.addClass('authorization__submit_active');\r\n            return true;\r\n        }else if ($inputSubmit.hasClass('authorization__submit_active')) {\r\n            $inputSubmit.removeClass('authorization__submit_active');\r\n        }\r\n    };\r\n\r\n    const onFormRestorePasswordSubmit = event => {\r\n        event.preventDefault();\r\n        if (onFormRestorePasswordCheck()){\r\n            $formRestorePassword.ajaxSubmit($ajaxArgs);\r\n        }\r\n    };\r\n\r\n    const onFormRestorePasswordCheck = () => {\r\n        if (onEmailCheck()) {\r\n            $inputSubmit.addClass('authorization__submit_active');\r\n            return true;\r\n        }else if ($inputSubmit.hasClass('authorization__submit_active')) {\r\n            $inputSubmit.removeClass('authorization__submit_active');\r\n        }\r\n    };\r\n\r\n    const onFormLoginSubmit = event => {\r\n        event.preventDefault();\r\n        if (onFormLoginCheck()){\r\n            $formLogin.ajaxSubmit($ajaxArgs);\r\n        }\r\n    };\r\n\r\n    const onFormLoginCheck = () => {\r\n        if (onEmailCheck() && onPasswordCheck()) {\r\n            $inputSubmit.addClass('authorization__submit_active');\r\n            return true;\r\n        }else if ($inputSubmit.hasClass('authorization__submit_active')) {\r\n            $inputSubmit.removeClass('authorization__submit_active');\r\n        }\r\n    };\r\n\r\n    const onFormRegistrationPhoneSubmit = event => {\r\n        event.preventDefault();\r\n        if (onFormRegistrationPhoneCheck()){\r\n            $formRegistrationPhone.ajaxSubmit($ajaxArgs);\r\n        }\r\n    };\r\n\r\n    const onFormRegistrationPhoneCheck = () => {\r\n        if (onPhoneCheck()) {\r\n            $inputSubmit.addClass('authorization__submit_active');\r\n            return true;\r\n        }else if ($inputSubmit.hasClass('authorization__submit_active')) {\r\n            $inputSubmit.removeClass('authorization__submit_active');\r\n        }\r\n    };\r\n\r\n    const onFormRegistrationSubmit = event => {\r\n            event.preventDefault();\r\n            if (onFormRegistrationCheck()){\r\n                $formRegistration.ajaxSubmit($ajaxArgs);\r\n            }\r\n    };\r\n\r\n    const onFormRegistrationCheck = () => {\r\n        if (onPasswordCheckHint() && onEmailCheck()) {\r\n            $inputSubmit.addClass('authorization__submit_active');\r\n            return true;\r\n        }else if ($inputSubmit.hasClass('authorization__submit_active')) {\r\n            $inputSubmit.removeClass('authorization__submit_active');\r\n        }\r\n    };\r\n\r\n    const onEmailCheck = () => {\r\n        if ($inputEmail.val().match(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i)) {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    //TODO: create validation for phone field\r\n\r\n    const onPhoneCheck = () => {\r\n        if ($inputPhone.val().length === 12) {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const onPasswordCheckHint = () => {\r\n        let validated = true;\r\n\r\n        if($inputPassword.val().length > 5) {\r\n            $inputPasswordHintMin.addClass($inputPasswordHintBlock);\r\n        }else {\r\n            $inputPasswordHintMin.removeClass($inputPasswordHintBlock);\r\n            validated = false;\r\n        }\r\n        if($inputPassword.val().match(/[A-Z]/g)) {\r\n            $inputPasswordHintCapital.addClass($inputPasswordHintBlock);\r\n        }else {\r\n            $inputPasswordHintCapital.removeClass($inputPasswordHintBlock);\r\n            validated = false;\r\n        }\r\n        if($inputPassword.val().match(/\\d/g)) {\r\n            $inputPasswordHintNumber.addClass($inputPasswordHintBlock);\r\n        }else {\r\n            $inputPasswordHintNumber.removeClass($inputPasswordHintBlock);\r\n            validated = false;\r\n        }\r\n        return validated;\r\n    };\r\n\r\n    const onPasswordCheck = () => {\r\n        let validated = true;\r\n\r\n        if($inputPassword.val().length < 5) validated = false;\r\n        if(!$inputPassword.val().match(/[A-Z]/g)) validated = false;\r\n        if(!$inputPassword.val().match(/\\d/g)) validated = false;\r\n\r\n        return validated;\r\n    };\r\n\r\n    const onPasswordFocus = () => {\r\n        if (!$inputPasswordHint.hasClass('authorization__password-hint_active')) {\r\n            $inputPasswordHint.addClass('authorization__password-hint_active');\r\n        }\r\n    };\r\n\r\n    const onPasswordChangeType = () => {\r\n        $inputPassword.attr('type') === 'text' ? $inputPassword.attr('type', 'password') : $inputPassword.attr('type', 'text');\r\n    };\r\n\r\n\r\n    $(() => {\r\n        init();\r\n        initCards();\r\n        /*\r\n        initCalcForm();\r\n\r\n        let interval = setInterval(() => {\r\n            if (aboutVideo) {\r\n                initAboutVideo();\r\n                clearInterval(interval);\r\n            }\r\n        }, 500);\r\n    });*/\r\n})(document, window, location, jQuery, WP);\r\n\r\nlet aboutVideo = false;\r\n\r\nfunction onYouTubePlayerAPIReady() {\r\n    aboutVideo = true;\r\n}\r\n"]}
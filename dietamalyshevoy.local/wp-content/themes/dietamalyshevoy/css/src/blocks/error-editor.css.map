{"version":3,"file":"error-editor.css","sources":["blocks/error-editor.scss","_options.scss","conf/_sizing.scss","conf/_adaptations.scss","utilities/_list.scss","conf/_typography.scss","conf/_palette.scss","conf/_misc.scss","conf/_contents.scss","utilities/_clear.scss","blocks/error.scss"],"sourcesContent":["@import '../options';\r\n\r\n@import '../utilities/clear';\r\n\r\n.editor-styles-wrapper {\r\n  .wp-block[data-type=\"dem/error\"] {\r\n    max-width: unset;\r\n\r\n    @import 'error';\r\n  }\r\n}","@import 'conf/sizing';\r\n@import 'conf/adaptations';\r\n@import 'conf/typography';\r\n@import 'conf/palette';\r\n@import 'conf/misc';\r\n@import 'conf/contents';\r\n","$x: 4px;\r\n","@import '../utilities/list';\r\n\r\n$breakpoints: (\r\n  xxxxxs: 320px,\r\n  xxxxs: 375px,\r\n  xxxs: 425px,\r\n  xxs: 480px,\r\n  xs: 640px,\r\n  s: 768px,\r\n  m: 960px,\r\n  l: 1024px,\r\n  xl: 1280px,\r\n  xxl: 1440px,\r\n  xxxl: 1600px,\r\n  xxxxl: 1920px,\r\n  xxxxxl: 2560px,\r\n);\r\n\r\n$adaptations: (\r\n  mobile-s: (\r\n    max-width: xxxxs\r\n  ),\r\n  mobile-m: (\r\n    min-width: xxxxs,\r\n    max-width: xs\r\n  ),\r\n  mobile-l: (\r\n    min-width: xs,\r\n    max-width: m\r\n  ),\r\n  desktop-s: (\r\n    min-width: m,\r\n    max-width: xl\r\n  ),\r\n  desktop-m: (\r\n    min-width: xl,\r\n    max-width: xxl\r\n  ),\r\n  desktop-l: (\r\n    min-width: xxl\r\n  )\r\n);\r\n\r\n@mixin adaptation($medias...) {\r\n  @each $media in $medias {\r\n    @if not map-has-key($adaptations, $media) {\r\n      @error \"Unknown adaptation '#{$media}'\";\r\n    }\r\n\r\n    $adaptation: map-get($adaptations, $media);\r\n\r\n    $options: (\"screen\");\r\n    @each $option in (min-width, max-width) {\r\n      @if map-has-key($adaptation, $option) {\r\n        $value: map-get($breakpoints, map-get($adaptation, $option));\r\n        @if $option == max-width and map-has-key($adaptation, min-width) {\r\n          $value: $value + .1;\r\n        }\r\n\r\n        $options: append($options, unquote(\"(#{$option}: #{$value})\"));\r\n      }\r\n    }\r\n\r\n    @media only #{implode($options, ' and ')} { @content; }\r\n  }\r\n}\r\n","@function implode($list, $glue: \"\") {\r\n  $result: null;\r\n  @each $i in $list {\r\n    @if type-of($i) == list {\r\n      $result: unquote(\"#{$result}#{$glue}#{implode($i, $glue)}\");\r\n    } @else {\r\n      $result: unquote(\"#{$result}#{$glue}#{$i}\");\r\n    }\r\n  }\r\n  @if $result != null {\r\n    $result: str-slice($result, str-length($glue) + 1, -1);\r\n  }\r\n  @return $result;\r\n}\r\n","@import 'sizing';\r\n\r\n$font-family_MW: 'Merriweather', Georgia, serif;\r\n$font-family_R:  'Roboto', Arial, sans-serif;\r\n$font-family_C:  'Caveat', 'Brush Script MT', cursive;\r\n\r\n@mixin text($style: normal) {\r\n  @if index(none small medium normal big h9 h8 h7 h6 h5 h4 h3 h2 h1, $style) {\r\n    @if $style == none {\r\n      font-size: 0;\r\n      line-height: 0;\r\n    } @else if $style == small {\r\n      font-family: $font-family_R;\r\n      font-size: 10px;\r\n      line-height: $x * 4;\r\n      letter-spacing: .02em;\r\n    } @else if $style == medium {\r\n      font-family: $font-family_R;\r\n      font-size: 12px;\r\n      line-height: $x * 4;\r\n      letter-spacing: .033em;\r\n    } @else if $style == normal {\r\n      font-family: $font-family_R;\r\n      font-size: 14px;\r\n      line-height: $x * 5;\r\n    } @else if $style == big {\r\n      font-family: $font-family_R;\r\n      font-size: 16px;\r\n      line-height: $x * 6;\r\n    } @else if $style == h9 {\r\n      font-family: $font-family_MW;\r\n      font-size: 15px;\r\n      line-height: $x * 5;\r\n      font-weight: bold;\r\n      font-style: italic;\r\n    } @else if $style == h8 {\r\n      font-family: $font-family_R;\r\n      font-size: 16px;\r\n      line-height: $x * 6;\r\n      font-weight: bold;\r\n    } @else if $style == h7 {\r\n      font-family: $font-family_MW;\r\n      font-size: 17px;\r\n      line-height: $x * 6;\r\n      font-weight: bold;\r\n      font-style: italic;\r\n    } @else if $style == h6 {\r\n      font-family: $font-family_R;\r\n      font-size: 24px;\r\n      line-height: $x * 8;\r\n      font-weight: 500;\r\n    } @else if $style == h5 {\r\n      font-family: $font-family_MW;\r\n      font-size: 24px;\r\n      line-height: $x * 8;\r\n      font-weight: 300;\r\n      font-style: italic;\r\n    } @else if $style == h4 {\r\n      font-family: $font-family_MW;\r\n      font-size: 24px;\r\n      line-height: $x * 8;\r\n      font-weight: bold;\r\n      font-style: italic;\r\n    } @else if $style == h3 {\r\n      font-family: $font-family_MW;\r\n      font-size: 36px;\r\n      line-height: $x * 12;\r\n      font-weight: bold;\r\n      font-style: italic;\r\n    } @else if $style == h2 {\r\n      font-family: $font-family_MW;\r\n      font-size: 40px;\r\n      line-height: $x * 14;\r\n      font-weight: bold;\r\n      font-style: italic;\r\n    } @else if $style == h1 {\r\n      font-family: $font-family_MW;\r\n      font-size: 48px;\r\n      line-height: $x * 16;\r\n      letter-spacing: -.01em;\r\n      font-weight: bold;\r\n      font-style: italic;\r\n    }\r\n  } @else {\r\n    @error \"Unknown text style '#{$style}'\";\r\n  }\r\n}\r\n","$color--white: #fff;\r\n$color--black: #323232;\r\n\r\n$color--gray1: #6b6b6b;\r\n$color--gray2: #9a9a9a;\r\n$color--gray3: #c9c9c9;\r\n$color--gray4: #f5f5f5;\r\n\r\n$color--red1: #ed5749;\r\n$color--red2: #e45446;\r\n$color--red3: #f26a5e;\r\n\r\n$color--yellow1: #ffc328;\r\n$color--yellow2: #fbbe21;\r\n$color--yellow3: #fdd33d;\r\n$color--yellow4: #ffe090;\r\n$color--yellow5: #fff4d7;\r\n$color--yellow6: #fdf6e2;\r\n\r\n$color--green1: #68cf6d;\r\n$color--green2: #85da89;\r\n$color--green3: #8cdc8f;\r\n$color--green4: #caebcb;\r\n\r\n$color--blue1: #6fa1ec;\r\n$color--blue2: #628ed1;\r\n$color--blue3: #86b0ef;\r\n$color--blue4: #bfd5f7;\r\n$color--blue5: #eaf0f8;\r\n\r\n$color--light_blue1: #eef4fd;\r\n$color--light_blue2: #f3f7fd;\r\n\r\n$color--purple1: #e44c99;\r\n$color--purple2: #d94691;\r\n$color--purple3: #f4d3e4;\r\n$color--purple4: #f7e5ee;\r\n$color--purple5: #fceaf3;\r\n$color--purple6: #fbf2f7;\r\n","$transition: .3s ease-out 0s;\r\n$flip_transition: .7s ease-out .001s;\r\n\r\n$shadow--card: 0 $x * 5 $x * 10 rgba($color--black, .05);\r\n","$content--space: '\\00a0';\r\n","@mixin clear($clear: both) {\r\n  clear: $clear;\r\n}\r\n\r\n@mixin clear_pseudo($clear: both, $pseudo: after) {\r\n  &:#{$pseudo} {\r\n    @include clear($clear);\r\n\r\n    content: '\\00a0';\r\n    display: block;\r\n    font-size: 0;\r\n    line-height: 0;\r\n  }\r\n}\r\n\r\n@mixin clear_list {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 0;\r\n  list-style: none;\r\n\r\n  & > * {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 1rem;\r\n  }\r\n}\r\n\r\n@mixin clear_input {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: none;\r\n  background: none;\r\n  font-size: inherit;\r\n  line-height: inherit;\r\n  color: inherit;\r\n  outline: none;\r\n}\r\n\r\n@mixin clear_search {\r\n  // sass-lint:disable-block no-vendor-prefixes\r\n\r\n  @include clear_input;\r\n\r\n  &::-webkit-search-decoration,\r\n  &::-webkit-search-cancel-button,\r\n  &::-webkit-search-results-button,\r\n  &::-webkit-search-results-decoration {\r\n    display: none;\r\n  }\r\n}","@import '../options';\r\n\r\n.error {\r\n  margin-top: $x * 31;\r\n  margin-bottom: $x * 31;\r\n\r\n  & > .content {\r\n    width: $x * 164;\r\n  }\r\n}"],"names":[],"mappings":"AAIA,AACE,sBADoB,CACpB,SAAS,CAAA,AAAA,SAAC,CAAU,WAAW,AAArB,EAAuB;EAC/B,SAAS,EAAE,KAAK,GAGjB;EALH,AUFA,sBVEsB,CACpB,SAAS,CAAA,AAAA,SAAC,CAAU,WAAW,AAArB,EUHZ,MAAM,CAAC;IACL,UAAU,EAAE,KAAO;IACnB,aAAa,EAAE,KAAO,GAKvB;IVLD,AUEE,sBVFoB,CACpB,SAAS,CAAA,AAAA,SAAC,CAAU,WAAW,AAArB,EUHZ,MAAM,GAIA,QAAQ,CAAC;MACX,KAAK,EAAE,KAAQ,GAChB"}